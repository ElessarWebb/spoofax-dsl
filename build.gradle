Closure compilerPlugins = {
  String parjar = project.configurations.compile.find { it.name.startsWith("paradise") }
  scalaCompileOptions.additionalParameters = [
    "-Xplugin:$parjar",
    "-Xplugin-require:macroparadise"
  ]
}

allprojects {
  repositories {
      mavenCentral()
  }

  apply plugin: 'scala'
  apply plugin: 'idea'

  dependencies {
    compile 'org.scala-lang:scala-library:2.11.0'
    compile 'org.scalamacros:paradise_2.11.0:2.0.0'

    runtime "org.scala-lang:scala-library:2.11.0"

    testCompile 'junit:junit:4.11'
    testCompile 'org.scalatest:scalatest_2.11:2.1.5'
  }
}

subprojects {
  task initProject(description: 'Initialize project') << { task ->
    task.project.sourceSets.each {
      it.scala.srcDirs.each {
        println "Creating $it"
        it.mkdirs()
      }
    }
  }
}

project(':macros') {
  dependencies {
    compile 'org.scala-lang:scala-reflect:2.11.0'

    runtime "org.scala-lang:scala-compiler:2.11.0"
  }

  compileScala compilerPlugins
  compileTestScala compilerPlugins
}

project(':core') {
  dependencies {
    compile project(':macros')
  }

  compileScala compilerPlugins
  compileTestScala compilerPlugins
}
